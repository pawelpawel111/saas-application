{"ast":null,"code":"var _jsxFileName = \"C:\\\\SaaSapp\\\\saas-system\\\\frontend\\\\src\\\\components\\\\EmployeesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport './styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst EmployeesList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [confirmationDialogOpen, setConfirmationDialogOpen] = useState(false);\n  const [isAddMode, setIsAddMode] = useState(false);\n  useEffect(() => {\n    const role = localStorage.getItem('role');\n    if (!role || role !== 'admin' && role !== 'superadmin') {\n      navigate('/login');\n      return;\n    }\n    const fetchEmployees = async () => {\n      try {\n        console.log('Frontend: Rozpoczęto pobieranie pracowników...');\n        const token = localStorage.getItem('token');\n        if (!token) {\n          console.log('Frontend: Brak tokenu uwierzytelniającego.');\n          throw new Error('Brak tokenu uwierzytelniającego.');\n        }\n        const response = await axios.get('/api/employees', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          baseURL: 'http://localhost:3000'\n        });\n        console.log('Frontend: Pobrano pracowników pomyślnie:', response.data);\n        setEmployees(response.data);\n        setError(null);\n      } catch (err) {\n        console.error('Frontend: Błąd pobierania pracowników:', err);\n        console.error('Frontend: Ślad stosu:', err.stack);\n        setError(err instanceof Error ? err.message : 'Wystąpił błąd podczas pobierania listy pracowników.');\n      } finally {\n        console.log('Frontend: Pobieranie pracowników zakończone.');\n        setLoading(false);\n      }\n    };\n    fetchEmployees();\n  }, [navigate]);\n  const openModal = (employee, addMode = false) => {\n    setSelectedEmployee(employee ? {\n      ...employee\n    } : {\n      name: '',\n      surname: '',\n      position: '',\n      email: '',\n      phone: ''\n    });\n    setIsAddMode(addMode);\n    setModalIsOpen(true);\n  };\n  const closeModal = () => {\n    setSelectedEmployee(null);\n    setModalIsOpen(false);\n    setIsAddMode(false);\n  };\n  const handleEditEmployee = employee => {\n    openModal(employee);\n  };\n  const handleAddEmployee = () => {\n    openModal(null, true);\n  };\n  const handleDeleteEmployee = employee => {\n    setSelectedEmployee(employee);\n    setConfirmationDialogOpen(true);\n  };\n  const handleConfirmDelete = async () => {\n    if (!selectedEmployee) return;\n    try {\n      await axios.delete(`/api/employees/${selectedEmployee.id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        },\n        baseURL: 'http://localhost:3000'\n      });\n      setEmployees(prevEmployees => prevEmployees.filter(emp => emp.id !== selectedEmployee.id));\n      setError(null);\n    } catch (err) {\n      console.error('Błąd podczas usuwania pracownika:', err);\n      setError(err.message);\n    }\n    setConfirmationDialogOpen(false);\n    closeModal();\n  };\n  const handleSaveEmployee = async () => {\n    if (!selectedEmployee) return;\n    try {\n      console.log('Frontend: Dane wysyłane do serwera:', selectedEmployee); // Dodaj log\n\n      if (isAddMode) {\n        console.log('Frontend: Wykonywanie żądania POST...'); // Dodaj log\n        const response = await axios.post('/api/employees', selectedEmployee, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          },\n          baseURL: 'http://localhost:3000'\n        });\n        console.log('Frontend: Odpowiedź z serwera (POST):', response); // Dodaj log\n        setEmployees(prevEmployees => [...prevEmployees, selectedEmployee]);\n      } else {\n        console.log('Frontend: Wykonywanie żądania PUT...'); // Dodaj log\n        const response = await axios.put(`/api/employees/${selectedEmployee.id}`, selectedEmployee, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          },\n          baseURL: 'http://localhost:3000'\n        });\n        console.log('Frontend: Odpowiedź z serwera (PUT):', response); // Dodaj log\n        setEmployees(prevEmployees => prevEmployees.map(emp => emp.id === selectedEmployee.id ? selectedEmployee : emp));\n      }\n      setError(null);\n      // Aktualizacja selectedEmployee po pomyślnym zapisie\n      setSelectedEmployee(selectedEmployee);\n    } catch (err) {\n      console.error('Frontend: Błąd podczas zapisywania pracownika:', err);\n      console.error('Frontend: Szczegóły błędu:', err.response); // Dodaj log\n      setError(err.message);\n      // Aktualizacja selectedEmployee w przypadku błędu (opcjonalnie)\n      // setSelectedEmployee(null);\n    }\n    closeModal();\n  };\n  const ConfirmationDialog = ({\n    onConfirm,\n    onCancel\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialog\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Czy na pewno chcesz usun\\u0105\\u0107 tego pracownika?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onConfirm,\n          className: \"btn-delete\",\n          children: \"Tak\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onCancel,\n          className: \"btn-cancel\",\n          children: \"Nie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-[400px]\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2 text-gray-600\",\n        children: \"\\u0141adowanie...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-50 border border-red-200 rounded-lg p-4 my-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center text-red-700\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"B\\u0142\\u0105d: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeesList, \"yvoN5EVPLBqMU/XLZTGm3s1/jrI=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeesList;\nexport default EmployeesList;\nvar _c;\n$RefreshReg$(_c, \"EmployeesList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","Modal","jsxDEV","_jsxDEV","setAppElement","EmployeesList","_s","employees","setEmployees","loading","setLoading","error","setError","navigate","modalIsOpen","setModalIsOpen","selectedEmployee","setSelectedEmployee","confirmationDialogOpen","setConfirmationDialogOpen","isAddMode","setIsAddMode","role","localStorage","getItem","fetchEmployees","console","log","token","Error","response","get","headers","Authorization","baseURL","data","err","stack","message","openModal","employee","addMode","name","surname","position","email","phone","closeModal","handleEditEmployee","handleAddEmployee","handleDeleteEmployee","handleConfirmDelete","delete","id","prevEmployees","filter","emp","handleSaveEmployee","post","put","map","ConfirmationDialog","onConfirm","onCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/SaaSapp/saas-system/frontend/src/components/EmployeesList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Modal from 'react-modal';\r\nimport './styles/styles.css';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst EmployeesList = () => {\r\n    const [employees, setEmployees] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const navigate = useNavigate();\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n    const [confirmationDialogOpen, setConfirmationDialogOpen] = useState(false);\r\n    const [isAddMode, setIsAddMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const role = localStorage.getItem('role');\r\n        if (!role || (role !== 'admin' && role !== 'superadmin')) {\r\n            navigate('/login');\r\n            return;\r\n        }\r\n\r\n        const fetchEmployees = async () => {\r\n            try {\r\n                console.log('Frontend: Rozpoczęto pobieranie pracowników...');\r\n                const token = localStorage.getItem('token');\r\n                if (!token) {\r\n                    console.log('Frontend: Brak tokenu uwierzytelniającego.');\r\n                    throw new Error('Brak tokenu uwierzytelniającego.');\r\n                }\r\n\r\n                const response = await axios.get('/api/employees', {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                    baseURL: 'http://localhost:3000',\r\n                });\r\n\r\n                console.log('Frontend: Pobrano pracowników pomyślnie:', response.data);\r\n                setEmployees(response.data);\r\n                setError(null);\r\n            } catch (err) {\r\n                console.error('Frontend: Błąd pobierania pracowników:', err);\r\n                console.error('Frontend: Ślad stosu:', err.stack);\r\n                setError(\r\n                    err instanceof Error\r\n                        ? err.message\r\n                        : 'Wystąpił błąd podczas pobierania listy pracowników.'\r\n                );\r\n            } finally {\r\n                console.log('Frontend: Pobieranie pracowników zakończone.');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchEmployees();\r\n    }, [navigate]);\r\n\r\n    const openModal = (employee, addMode = false) => {\r\n        setSelectedEmployee(employee ? { ...employee } : {\r\n            name: '',\r\n            surname: '',\r\n            position: '',\r\n            email: '',\r\n            phone: ''\r\n        });\r\n        setIsAddMode(addMode);\r\n        setModalIsOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedEmployee(null);\r\n        setModalIsOpen(false);\r\n        setIsAddMode(false);\r\n    };\r\n\r\n    const handleEditEmployee = (employee) => {\r\n        openModal(employee);\r\n    };\r\n\r\n    const handleAddEmployee = () => {\r\n        openModal(null, true);\r\n    };\r\n\r\n    const handleDeleteEmployee = (employee) => {\r\n        setSelectedEmployee(employee);\r\n        setConfirmationDialogOpen(true);\r\n    };\r\n\r\n    const handleConfirmDelete = async () => {\r\n        if (!selectedEmployee) return;\r\n        try {\r\n            await axios.delete(`/api/employees/${selectedEmployee.id}`, {\r\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n                baseURL: 'http://localhost:3000',\r\n            });\r\n            setEmployees(prevEmployees => prevEmployees.filter(emp => emp.id !== selectedEmployee.id));\r\n            setError(null);\r\n        } catch (err) {\r\n            console.error('Błąd podczas usuwania pracownika:', err);\r\n            setError(err.message);\r\n        }\r\n        setConfirmationDialogOpen(false);\r\n        closeModal();\r\n    };\r\n\r\n    const handleSaveEmployee = async () => {\r\n        if (!selectedEmployee) return;\r\n        try {\r\n            console.log('Frontend: Dane wysyłane do serwera:', selectedEmployee); // Dodaj log\r\n\r\n            if (isAddMode) {\r\n                console.log('Frontend: Wykonywanie żądania POST...'); // Dodaj log\r\n                const response = await axios.post('/api/employees', selectedEmployee, {\r\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n                    baseURL: 'http://localhost:3000',\r\n                });\r\n                console.log('Frontend: Odpowiedź z serwera (POST):', response); // Dodaj log\r\n                setEmployees(prevEmployees => [...prevEmployees, selectedEmployee]);\r\n            } else {\r\n                console.log('Frontend: Wykonywanie żądania PUT...'); // Dodaj log\r\n                const response = await axios.put(`/api/employees/${selectedEmployee.id}`, selectedEmployee, {\r\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n                    baseURL: 'http://localhost:3000',\r\n                });\r\n                console.log('Frontend: Odpowiedź z serwera (PUT):', response); // Dodaj log\r\n                setEmployees(prevEmployees => prevEmployees.map(emp =>\r\n                    emp.id === selectedEmployee.id ? selectedEmployee : emp\r\n                ));\r\n            }\r\n            setError(null);\r\n            // Aktualizacja selectedEmployee po pomyślnym zapisie\r\n            setSelectedEmployee(selectedEmployee);\r\n        } catch (err) {\r\n            console.error('Frontend: Błąd podczas zapisywania pracownika:', err);\r\n            console.error('Frontend: Szczegóły błędu:', err.response); // Dodaj log\r\n            setError(err.message);\r\n            // Aktualizacja selectedEmployee w przypadku błędu (opcjonalnie)\r\n            // setSelectedEmployee(null);\r\n        }\r\n        closeModal();\r\n    };\r\n\r\n    const ConfirmationDialog = ({ onConfirm, onCancel }) => {\r\n        return (\r\n            <div className=\"dialog\">\r\n                <h2>Czy na pewno chcesz usunąć tego pracownika?</h2>\r\n                <div className=\"button-group\">\r\n                    <button onClick={onConfirm} className=\"btn-delete\">Tak</button>\r\n                    <button onClick={onCancel} className=\"btn-cancel\">Nie</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"flex items-center justify-center min-h-[400px]\">\r\n                <span className=\"ml-2 text-gray-600\">Ładowanie...</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 my-4\">\r\n                <div className=\"flex items-center text-red-700\">\r\n                    <span>Błąd: {error}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-6\">\r\n            {/* ... (reszta kodu - bez zmian) */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmployeesList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}