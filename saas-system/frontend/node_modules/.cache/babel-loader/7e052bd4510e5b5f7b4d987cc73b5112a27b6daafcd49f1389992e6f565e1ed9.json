{"ast":null,"code":"var _jsxFileName = \"C:\\\\SaaSapp\\\\saas-system\\\\frontend\\\\src\\\\components\\\\Calendar\\\\calendar.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./styles.css\";\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\n\n// Konfiguracja axios\nconst api = axios.create({\n  baseURL: 'http://localhost:3000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor do dodawania tokenu\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Pomocnicza funkcja do sprawdzania dostępności terminu\nconst checkTimeSlotAvailability = (startTime, endTime, events) => {\n  if (!events) return true;\n  return !events.some(event => startTime >= event.start && startTime < event.end || endTime > event.start && endTime <= event.end || startTime <= event.start && endTime >= event.end);\n};\nconst MyCalendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [services, setServices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [selectedServiceId, setSelectedServiceId] = useState(null);\n  const [serviceSelectionDialogOpen, setServiceSelectionDialogOpen] = useState(false);\n  const [confirmationDialogOpen, setConfirmationDialogOpen] = useState(false);\n  const [slotSelection, setSlotSelection] = useState(null);\n  const formats = {\n    timeGutterFormat: 'HH:mm',\n    eventTimeRangeFormat: ({\n      start,\n      end\n    }, culture, local) => local.format(start, 'HH:mm', culture) + ' - ' + local.format(end, 'HH:mm', culture),\n    dayFormat: 'DD-MM-YYYY',\n    monthHeaderFormat: 'MMMM YYYY'\n  };\n  const fetchEventsAndServices = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setError('Brak tokenu uwierzytelniającego. Zaloguj się ponownie.');\n        return;\n      }\n      const [eventsResponse, servicesResponse] = await Promise.all([api.get('/events'), api.get('/services')]);\n      const eventsWithServices = eventsResponse.data.map(event => {\n        const service = servicesResponse.data.find(s => s.id === event.serviceId);\n        return {\n          ...event,\n          start: new Date(event.start),\n          end: new Date(event.end),\n          title: service ? service.name : 'Usługa nieznana'\n        };\n      });\n      setEvents(eventsWithServices);\n      setServices(servicesResponse.data);\n      setError(null);\n    } catch (err) {\n      console.error('Błąd podczas pobierania danych:', err);\n      handleApiError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchEventsAndServices();\n  }, []);\n  const handleSelectSlot = ({\n    start,\n    end\n  }) => {\n    const roundedStart = moment(start).startOf('hour').toDate();\n    const roundedEnd = moment(end).startOf('hour').toDate();\n    setSlotSelection({\n      start: roundedStart,\n      end: roundedEnd\n    });\n    setServiceSelectionDialogOpen(true);\n  };\n  const handleServiceSelection = async (serviceId, selectedStartTime, serviceDuration) => {\n    if (!serviceId || !selectedStartTime) return;\n    try {\n      const startTime = moment(selectedStartTime);\n      const endTime = moment(selectedStartTime).add(serviceDuration, 'hours');\n      if (!checkTimeSlotAvailability(startTime.toDate(), endTime.toDate(), events)) {\n        alert('Wybrany termin jest już zajęty');\n        return;\n      }\n      const newEvent = {\n        serviceId: parseInt(serviceId),\n        start: startTime.toISOString(),\n        end: endTime.toISOString()\n      };\n      const response = await api.post('/events', newEvent);\n      const service = services.find(s => s.id === parseInt(serviceId));\n      const createdEvent = {\n        id: response.data.id || uuidv4(),\n        ...newEvent,\n        start: startTime.toDate(),\n        end: endTime.toDate(),\n        title: service ? service.name : 'Usługa nieznana'\n      };\n      setEvents(prevEvents => [...prevEvents, createdEvent]);\n      setError(null);\n    } catch (err) {\n      console.error('Błąd podczas dodawania wydarzenia:', err);\n      handleApiError(err);\n    }\n    setServiceSelectionDialogOpen(false);\n    setSlotSelection(null);\n  };\n  const handleApiError = err => {\n    if (err.response) {\n      if (err.response.status === 401) {\n        setError('Sesja wygasła. Zaloguj się ponownie.');\n      } else if (err.response.status === 400) {\n        setError('Nieprawidłowe dane. Sprawdź formularz i spróbuj ponownie.');\n      } else {\n        setError(`Błąd serwera: ${err.response.status}`);\n      }\n    } else if (err.request) {\n      setError('Nie można połączyć się z serwerem. Sprawdź połączenie internetowe.');\n    } else {\n      setError(`Wystąpił błąd: ${err.message}`);\n    }\n  };\n  const handleSelectEvent = event => {\n    setSelectedEvent(event);\n    setSelectedServiceId(event.serviceId);\n  };\n  const handleUpdateEvent = async () => {\n    if (!selectedEvent || !selectedServiceId) return;\n    try {\n      await api.put(`/events/${selectedEvent.id}`, {\n        serviceId: parseInt(selectedServiceId)\n      });\n      const service = services.find(s => s.id === parseInt(selectedServiceId));\n      const updatedEvents = events.map(event => event.id === selectedEvent.id ? {\n        ...event,\n        serviceId: parseInt(selectedServiceId),\n        title: service.name\n      } : event);\n      setEvents(updatedEvents);\n      setSelectedEvent(null);\n      setError(null);\n    } catch (err) {\n      console.error('Błąd podczas aktualizacji wydarzenia:', err);\n      handleApiError(err);\n    }\n  };\n  const handleDeleteEvent = async () => {\n    if (!selectedEvent) return;\n    setConfirmationDialogOpen(true);\n  };\n  const handleConfirmDelete = async () => {\n    try {\n      await api.delete(`/events/${selectedEvent.id}`);\n      setEvents(prevEvents => prevEvents.filter(event => event.id !== selectedEvent.id));\n      setSelectedEvent(null);\n      setError(null);\n    } catch (err) {\n      console.error('Błąd podczas usuwania wydarzenia:', err);\n      handleApiError(err);\n    }\n    setConfirmationDialogOpen(false);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0141adowanie danych...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchEventsAndServices,\n      className: \"btn-retry\",\n      children: \"Spr\\xF3buj ponownie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      titleAccessor: \"title\",\n      selectable: true,\n      onSelectSlot: handleSelectSlot,\n      onSelectEvent: handleSelectEvent,\n      style: {\n        height: 500\n      },\n      formats: formats,\n      step: 60,\n      timeslots: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), selectedEvent && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-dialog\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edycja wydarzenia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Us\\u0142uga: \", selectedEvent.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data rozpocz\\u0119cia: \", moment(selectedEvent.start).format('DD-MM-YYYY HH:mm')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data zako\\u0144czenia: \", moment(selectedEvent.end).format('DD-MM-YYYY HH:mm')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedServiceId,\n        onChange: e => setSelectedServiceId(e.target.value),\n        className: \"select-input\",\n        children: services.map(service => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: service.id,\n          children: service.name\n        }, service.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateEvent,\n          className: \"btn-save\",\n          children: \"Zapisz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteEvent,\n          className: \"btn-delete\",\n          children: \"Usu\\u0144\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedEvent(null),\n          className: \"btn-cancel\",\n          children: \"Anuluj\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }, this), serviceSelectionDialogOpen && /*#__PURE__*/_jsxDEV(ServiceSelectionDialog, {\n      services: services,\n      onSelect: handleServiceSelection,\n      onClose: () => setServiceSelectionDialogOpen(false),\n      slotSelection: slotSelection,\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }, this), confirmationDialogOpen && /*#__PURE__*/_jsxDEV(ConfirmationDialog, {\n      onConfirm: handleConfirmDelete,\n      onCancel: () => setConfirmationDialogOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 9\n  }, this);\n};\n_s(MyCalendar, \"nyy30uDtzPMDGt/tUtTS7xvB2to=\");\n_c = MyCalendar;\nconst ServiceSelectionDialog = ({\n  services,\n  onSelect,\n  onClose,\n  slotSelection,\n  events\n}) => {\n  _s2();\n  const [selectedServiceId, setSelectedServiceId] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [selectedDuration, setSelectedDuration] = useState(1);\n  useEffect(() => {\n    if (slotSelection) {\n      setSelectedTime(moment(slotSelection.start).format('HH:mm'));\n    }\n  }, [slotSelection]);\n  const generateTimeSlots = () => {\n    const slots = [];\n    const startTime = moment(slotSelection.start).startOf('day');\n    const endTime = moment(slotSelection.start).endOf('day');\n    while (startTime.isBefore(endTime)) {\n      const timeSlot = startTime.format('HH:mm');\n      const slotStartTime = moment(slotSelection.start).format('YYYY-MM-DD') + ' ' + timeSlot;\n      const slotEndTime = moment(slotStartTime).add(selectedDuration, 'hours');\n      const isAvailable = checkTimeSlotAvailability(new Date(slotStartTime), slotEndTime.toDate(), events);\n      if (isAvailable) {\n        slots.push(timeSlot);\n      }\n      startTime.add(30, 'minutes');\n    }\n    return slots;\n  };\n  const handleSave = () => {\n    if (!selectedServiceId || !selectedTime) {\n      alert('Wybierz usługę i godzinę');\n      return;\n    }\n    const selectedDateTime = moment(slotSelection.start).format('YYYY-MM-DD') + ' ' + selectedTime;\n    onSelect(selectedServiceId, new Date(selectedDateTime), selectedDuration);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dialog\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Wybierz us\\u0142ug\\u0119 i godzin\\u0119\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedServiceId,\n      onChange: e => setSelectedServiceId(e.target.value),\n      className: \"select-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Wybierz us\\u0142ug\\u0119\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this), services.map(service => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: service.id,\n        children: service.name\n      }, service.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTime,\n      onChange: e => setSelectedTime(e.target.value),\n      className: \"select-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Wybierz godzin\\u0119\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this), generateTimeSlots().map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: time,\n        children: time\n      }, time, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedDuration,\n      onChange: e => setSelectedDuration(parseInt(e.target.value)),\n      className: \"select-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 1,\n        children: \"1 godzina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 2,\n        children: \"2 godziny\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 3,\n        children: \"3 godziny\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: \"btn-save\",\n        children: \"Zapisz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"btn-cancel\",\n        children: \"Anuluj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 9\n  }, this);\n};\n_s2(ServiceSelectionDialog, \"GiRRVA2UX2QbLb5arjrzJoln+Kc=\");\n_c2 = ServiceSelectionDialog;\nconst ConfirmationDialog = ({\n  onConfirm,\n  onCancel\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dialog\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Czy na pewno chcesz usun\\u0105\\u0107 to wydarzenie?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onConfirm,\n        className: \"btn-delete\",\n        children: \"Tak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCancel,\n        className: \"btn-cancel\",\n        children: \"Nie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 9\n  }, this);\n};\n_c3 = ConfirmationDialog;\nexport default MyCalendar;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MyCalendar\");\n$RefreshReg$(_c2, \"ServiceSelectionDialog\");\n$RefreshReg$(_c3, \"ConfirmationDialog\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","axios","v4","uuidv4","jsxDEV","_jsxDEV","localizer","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","checkTimeSlotAvailability","startTime","endTime","events","some","event","start","end","MyCalendar","_s","setEvents","services","setServices","loading","setLoading","setError","selectedEvent","setSelectedEvent","selectedServiceId","setSelectedServiceId","serviceSelectionDialogOpen","setServiceSelectionDialogOpen","confirmationDialogOpen","setConfirmationDialogOpen","slotSelection","setSlotSelection","formats","timeGutterFormat","eventTimeRangeFormat","culture","local","format","dayFormat","monthHeaderFormat","fetchEventsAndServices","eventsResponse","servicesResponse","all","get","eventsWithServices","data","map","service","find","s","id","serviceId","Date","title","name","err","console","handleApiError","handleSelectSlot","roundedStart","startOf","toDate","roundedEnd","handleServiceSelection","selectedStartTime","serviceDuration","add","alert","newEvent","parseInt","toISOString","response","post","createdEvent","prevEvents","status","message","handleSelectEvent","handleUpdateEvent","put","updatedEvents","handleDeleteEvent","handleConfirmDelete","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","startAccessor","endAccessor","titleAccessor","selectable","onSelectSlot","onSelectEvent","style","height","step","timeslots","value","onChange","e","target","ServiceSelectionDialog","onSelect","onClose","ConfirmationDialog","onConfirm","onCancel","_c","_s2","selectedTime","setSelectedTime","selectedDuration","setSelectedDuration","generateTimeSlots","slots","endOf","isBefore","timeSlot","slotStartTime","slotEndTime","isAvailable","push","handleSave","selectedDateTime","time","_c2","_c3","$RefreshReg$"],"sources":["C:/SaaSapp/saas-system/frontend/src/components/Calendar/calendar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport \"./styles.css\";\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// Konfiguracja axios\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3000/api',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Interceptor do dodawania tokenu\r\napi.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n}, (error) => {\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Pomocnicza funkcja do sprawdzania dostępności terminu\r\nconst checkTimeSlotAvailability = (startTime, endTime, events) => {\r\n    if (!events) return true;\r\n    return !events.some(event => (\r\n        (startTime >= event.start && startTime < event.end) ||\r\n        (endTime > event.start && endTime <= event.end) ||\r\n        (startTime <= event.start && endTime >= event.end)\r\n    ));\r\n};\r\n\r\nconst MyCalendar = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [services, setServices] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedEvent, setSelectedEvent] = useState(null);\r\n    const [selectedServiceId, setSelectedServiceId] = useState(null);\r\n    const [serviceSelectionDialogOpen, setServiceSelectionDialogOpen] = useState(false);\r\n    const [confirmationDialogOpen, setConfirmationDialogOpen] = useState(false);\r\n    const [slotSelection, setSlotSelection] = useState(null);\r\n\r\n    const formats = {\r\n        timeGutterFormat: 'HH:mm',\r\n        eventTimeRangeFormat: ({ start, end }, culture, local) =>\r\n            local.format(start, 'HH:mm', culture) + ' - ' + local.format(end, 'HH:mm', culture),\r\n        dayFormat: 'DD-MM-YYYY',\r\n        monthHeaderFormat: 'MMMM YYYY',\r\n    };\r\n\r\n    const fetchEventsAndServices = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                setError('Brak tokenu uwierzytelniającego. Zaloguj się ponownie.');\r\n                return;\r\n            }\r\n\r\n            const [eventsResponse, servicesResponse] = await Promise.all([\r\n                api.get('/events'),\r\n                api.get('/services')\r\n            ]);\r\n\r\n            const eventsWithServices = eventsResponse.data.map(event => {\r\n                const service = servicesResponse.data.find(s => s.id === event.serviceId);\r\n                return {\r\n                    ...event,\r\n                    start: new Date(event.start),\r\n                    end: new Date(event.end),\r\n                    title: service ? service.name : 'Usługa nieznana'\r\n                };\r\n            });\r\n\r\n            setEvents(eventsWithServices);\r\n            setServices(servicesResponse.data);\r\n            setError(null);\r\n        } catch (err) {\r\n            console.error('Błąd podczas pobierania danych:', err);\r\n            handleApiError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchEventsAndServices();\r\n    }, []);\r\n\r\n    const handleSelectSlot = ({ start, end }) => {\r\n        const roundedStart = moment(start).startOf('hour').toDate();\r\n        const roundedEnd = moment(end).startOf('hour').toDate();\r\n        setSlotSelection({ start: roundedStart, end: roundedEnd });\r\n        setServiceSelectionDialogOpen(true);\r\n    };\r\n\r\n    const handleServiceSelection = async (serviceId, selectedStartTime, serviceDuration) => {\r\n        if (!serviceId || !selectedStartTime) return;\r\n\r\n        try {\r\n            const startTime = moment(selectedStartTime);\r\n            const endTime = moment(selectedStartTime).add(serviceDuration, 'hours');\r\n\r\n            if (!checkTimeSlotAvailability(startTime.toDate(), endTime.toDate(), events)) {\r\n                alert('Wybrany termin jest już zajęty');\r\n                return;\r\n            }\r\n\r\n            const newEvent = {\r\n                serviceId: parseInt(serviceId),\r\n                start: startTime.toISOString(),\r\n                end: endTime.toISOString()\r\n            };\r\n\r\n            const response = await api.post('/events', newEvent);\r\n\r\n            const service = services.find(s => s.id === parseInt(serviceId));\r\n            const createdEvent = {\r\n                id: response.data.id || uuidv4(),\r\n                ...newEvent,\r\n                start: startTime.toDate(),\r\n                end: endTime.toDate(),\r\n                title: service ? service.name : 'Usługa nieznana'\r\n            };\r\n\r\n            setEvents(prevEvents => [...prevEvents, createdEvent]);\r\n            setError(null);\r\n        } catch (err) {\r\n            console.error('Błąd podczas dodawania wydarzenia:', err);\r\n            handleApiError(err);\r\n        }\r\n\r\n        setServiceSelectionDialogOpen(false);\r\n        setSlotSelection(null);\r\n    };\r\n\r\n    const handleApiError = (err) => {\r\n        if (err.response) {\r\n            if (err.response.status === 401) {\r\n                setError('Sesja wygasła. Zaloguj się ponownie.');\r\n            } else if (err.response.status === 400) {\r\n                setError('Nieprawidłowe dane. Sprawdź formularz i spróbuj ponownie.');\r\n            } else {\r\n                setError(`Błąd serwera: ${err.response.status}`);\r\n            }\r\n        } else if (err.request) {\r\n            setError('Nie można połączyć się z serwerem. Sprawdź połączenie internetowe.');\r\n        } else {\r\n            setError(`Wystąpił błąd: ${err.message}`);\r\n        }\r\n    };\r\n\r\n    const handleSelectEvent = (event) => {\r\n        setSelectedEvent(event);\r\n        setSelectedServiceId(event.serviceId);\r\n    };\r\n\r\n    const handleUpdateEvent = async () => {\r\n        if (!selectedEvent || !selectedServiceId) return;\r\n\r\n        try {\r\n            await api.put(`/events/${selectedEvent.id}`, {\r\n                serviceId: parseInt(selectedServiceId)\r\n            });\r\n\r\n            const service = services.find(s => s.id === parseInt(selectedServiceId));\r\n            const updatedEvents = events.map(event => \r\n                event.id === selectedEvent.id \r\n                    ? { ...event, serviceId: parseInt(selectedServiceId), title: service.name }\r\n                    : event\r\n            );\r\n\r\n            setEvents(updatedEvents);\r\n            setSelectedEvent(null);\r\n            setError(null);\r\n        } catch (err) {\r\n            console.error('Błąd podczas aktualizacji wydarzenia:', err);\r\n            handleApiError(err);\r\n        }\r\n    };\r\n\r\n    const handleDeleteEvent = async () => {\r\n        if (!selectedEvent) return;\r\n        setConfirmationDialogOpen(true);\r\n    };\r\n\r\n    const handleConfirmDelete = async () => {\r\n        try {\r\n            await api.delete(`/events/${selectedEvent.id}`);\r\n            setEvents(prevEvents => prevEvents.filter(event => event.id !== selectedEvent.id));\r\n            setSelectedEvent(null);\r\n            setError(null);\r\n        } catch (err) {\r\n            console.error('Błąd podczas usuwania wydarzenia:', err);\r\n            handleApiError(err);\r\n        }\r\n        setConfirmationDialogOpen(false);\r\n    };\r\n\r\n    if (loading) return <div>Ładowanie danych...</div>;\r\n    if (error) return (\r\n        <div className=\"error-container\">\r\n            <div className=\"error-message\">{error}</div>\r\n            <button onClick={fetchEventsAndServices} className=\"btn-retry\">\r\n                Spróbuj ponownie\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"calendar-container\">\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                titleAccessor=\"title\"\r\n                selectable\r\n                onSelectSlot={handleSelectSlot}\r\n                onSelectEvent={handleSelectEvent}\r\n                style={{ height: 500 }}\r\n                formats={formats}\r\n                step={60}\r\n                timeslots={1}\r\n            />\r\n            {selectedEvent && (\r\n                <div className=\"event-dialog\">\r\n                    <h2>Edycja wydarzenia</h2>\r\n                    <p>Usługa: {selectedEvent.title}</p>\r\n                    <p>Data rozpoczęcia: {moment(selectedEvent.start).format('DD-MM-YYYY HH:mm')}</p>\r\n                    <p>Data zakończenia: {moment(selectedEvent.end).format('DD-MM-YYYY HH:mm')}</p>\r\n                    <select \r\n                        value={selectedServiceId} \r\n                        onChange={(e) => setSelectedServiceId(e.target.value)}\r\n                        className=\"select-input\"\r\n                    >\r\n                        {services.map(service => (\r\n                            <option key={service.id} value={service.id}>\r\n                                {service.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <div className=\"button-group\">\r\n                        <button onClick={handleUpdateEvent} className=\"btn-save\">Zapisz</button>\r\n                        <button onClick={handleDeleteEvent} className=\"btn-delete\">Usuń</button>\r\n                        <button onClick={() => setSelectedEvent(null)} className=\"btn-cancel\">Anuluj</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {serviceSelectionDialogOpen && (\r\n                <ServiceSelectionDialog\r\n                    services={services}\r\n                    onSelect={handleServiceSelection}\r\n                    onClose={() => setServiceSelectionDialogOpen(false)}\r\n                    slotSelection={slotSelection}\r\n                    events={events}\r\n                />\r\n            )}\r\n            {confirmationDialogOpen && (\r\n                <ConfirmationDialog\r\n                    onConfirm={handleConfirmDelete}\r\n                    onCancel={() => setConfirmationDialogOpen(false)}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ServiceSelectionDialog = ({ services, onSelect, onClose, slotSelection, events }) => {\r\n    const [selectedServiceId, setSelectedServiceId] = useState('');\r\n    const [selectedTime, setSelectedTime] = useState('');\r\n    const [selectedDuration, setSelectedDuration] = useState(1);\r\n\r\n    useEffect(() => {\r\n        if (slotSelection) {\r\n            setSelectedTime(moment(slotSelection.start).format('HH:mm'));\r\n        }\r\n    }, [slotSelection]);\r\n\r\n    const generateTimeSlots = () => {\r\n        const slots = [];\r\n        const startTime = moment(slotSelection.start).startOf('day');\r\n        const endTime = moment(slotSelection.start).endOf('day');\r\n\r\n        while (startTime.isBefore(endTime)) {\r\n            const timeSlot = startTime.format('HH:mm');\r\n            const slotStartTime = moment(slotSelection.start).format('YYYY-MM-DD') + ' ' + timeSlot;\r\n            const slotEndTime = moment(slotStartTime).add(selectedDuration, 'hours');\r\n\r\n            const isAvailable = checkTimeSlotAvailability(\r\n                new Date(slotStartTime),\r\n                slotEndTime.toDate(),\r\n                events\r\n            );\r\n\r\n            if (isAvailable) {\r\n                slots.push(timeSlot);\r\n            }\r\n\r\n            startTime.add(30, 'minutes');\r\n        }\r\n\r\n        return slots;\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (!selectedServiceId || !selectedTime) {\r\n            alert('Wybierz usługę i godzinę');\r\n            return;\r\n        }\r\n\r\n        const selectedDateTime = moment(slotSelection.start)\r\n            .format('YYYY-MM-DD') + ' ' + selectedTime;\r\n\r\n        onSelect(\r\n            selectedServiceId,\r\n            new Date(selectedDateTime),\r\n            selectedDuration\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"dialog\">\r\n            <h2>Wybierz usługę i godzinę</h2>\r\n            <select \r\n                value={selectedServiceId}\r\n                onChange={(e) => setSelectedServiceId(e.target.value)}\r\n                className=\"select-input\"\r\n            >\r\n                <option value=\"\">Wybierz usługę</option>\r\n                {services.map(service => (\r\n                    <option key={service.id} value={service.id}>\r\n                        {service.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <select\r\n                value={selectedTime}\r\n                onChange={(e) => setSelectedTime(e.target.value)}\r\n                className=\"select-input\"\r\n            >\r\n                <option value=\"\">Wybierz godzinę</option>\r\n                {generateTimeSlots().map(time => (\r\n                    <option key={time} value={time}>{time}</option>\r\n                ))}\r\n            </select>\r\n            <select\r\n                value={selectedDuration}\r\n                onChange={(e) => setSelectedDuration(parseInt(e.target.value))}\r\n                className=\"select-input\"\r\n            >\r\n                <option value={1}>1 godzina</option>\r\n                <option value={2}>2 godziny</option>\r\n                <option value={3}>3 godziny</option>\r\n            </select>\r\n            <div className=\"button-group\">\r\n                <button onClick={handleSave} className=\"btn-save\">Zapisz</button>\r\n                <button onClick={onClose} className=\"btn-cancel\">Anuluj</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ConfirmationDialog = ({ onConfirm, onCancel }) => {\r\n    return (\r\n        <div className=\"dialog\">\r\n            <h2>Czy na pewno chcesz usunąć to wydarzenie?</h2>\r\n            <div className=\"button-group\">\r\n                <button onClick={onConfirm} className=\"btn-delete\">Tak</button>\r\n                <button onClick={onCancel} className=\"btn-cancel\">Nie</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}